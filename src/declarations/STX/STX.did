type PropertyResponse = 
 record {
   address: text;
   contract: opt text;
   description: text;
   picture: vec nat8;
   rentValueBTC: nat;
   stxWallet: opt text;
   valueBTC: nat;
 };
type PropertyRequest = 
 record {
   address: text;
   contract: opt text;
   description: text;
   picture: vec nat8;
   privateKey: vec nat8;
   rentValueBTC: nat;
   status: text;
   valueBTC: nat;
 };
type Property = 
 record {
   address: text;
   contract: opt text;
   description: text;
   id: nat;
   owner: principal;
   picture: vec nat8;
   privateKey: opt vec nat8;
   rentValueBTC: nat;
   status: text;
   stxWallet: opt text;
   valueBTC: nat;
 };
service : {
  canister_and_caller_pub_key: () ->
   (variant {
      Err: text;
      Ok: record {public_key: blob;};
    });
  checkifHasNFT: (text, principal) -> (vec nat);
  crearPropertyWallet: (nat) -> (variant {
                                   Err: text;
                                   Ok: blob;
                                 });
  createNewMint: (text, text, nat) -> (variant {
                                         Err: text;
                                         Ok: text;
                                       });
  createProperty: (PropertyRequest) -> (nat);
  getPropertyNFTData: (text) -> (vec PropertyResponse);
  getUserProperties: () -> (vec Property);
  propertyDeployed: (nat, text) -> (variant {
                                      Err: text;
                                      Ok: text;
                                    });
  setStxPropertyWallet: (nat, text) -> (variant {
                                          Err: text;
                                          Ok: text;
                                        });
}
